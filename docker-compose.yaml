version: "3.9"

services:
  account:
    build:
      context: .
      dockerfile: account/app.dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@account_db:5432/postgres?sslmode=disable
    depends_on:
      account_db:
        condition: service_healthy
    ports:
      - "8080:8080"

  account_db:
    build:
      context: ./account
      dockerfile: db.dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\\|status.*yellow'"]
      interval: 10s
      timeout: 10s
      retries: 5

  catalog:
    build:
      context: .
      dockerfile: catalog/app.dockerfile
    environment:
      - DATABASE_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "8081:8080"

volumes:
  elasticsearch_data:

# order:
# graphql:
# catalog_db:
# order_db:
