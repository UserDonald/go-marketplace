version: "3.8"

services:
  account:
    build:
      context: .
      dockerfile: account/app.dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@account_db:5432/account?sslmode=disable
      - PORT=8081
    depends_on:
      account_db:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  account_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=account
    ports:
      - "5431:5432"
    volumes:
      - account_data:/var/lib/postgresql/data
      - ./account/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  catalog:
    build:
      context: .
      dockerfile: catalog/app.dockerfile
    environment:
      - ELASTICSEARCH_URL=http://catalog_db:9200
      - PORT=8082
    depends_on:
      catalog_db:
        condition: service_healthy
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8082/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  catalog_db:
    build:
      context: ./catalog/db
      dockerfile: Dockerfile
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - catalog_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  order:
    build:
      context: .
      dockerfile: order/app.dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@order_db:5432/order?sslmode=disable
      - ACCOUNT_SERVICE_URL=account:8081
      - CATALOG_SERVICE_URL=catalog:8082
      - PORT=8083
    depends_on:
      order_db:
        condition: service_healthy
      account:
        condition: service_healthy
      catalog:
        condition: service_healthy
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8083/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  order_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order
    ports:
      - "5433:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
      - ./order/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  graphql:
    build:
      context: .
      dockerfile: graphql/app.dockerfile
    environment:
      - ACCOUNT_SERVICE_URL=account:8081
      - CATALOG_SERVICE_URL=catalog:8082
      - ORDER_SERVICE_URL=order:8083
      - PORT=8080
    depends_on:
      account:
        condition: service_healthy
      catalog:
        condition: service_healthy
      order:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  account_data:
  catalog_data:
  order_data: